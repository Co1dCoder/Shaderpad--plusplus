gl_ClipDistance{{
类型:内建变量
声明:
gl_ClipDistance is a member of the gl_PerVertex named block: 
    out gl_PerVertex {
        vec4 gl_Position;
        float gl_PointSize;
        float gl_ClipDistance[];
    };
In fragment shaders, it is intrinsically declared as: in float gl_ClipDistance[] ;
支持版本:1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_ClipDistance — provides a forward-compatible mechanism for vertex clipping
适用范围:1.30-1.40仅顶点着色器 1.50-3.30进顶点和几何着色器
}}
gl_CullDistance{{
类型:内建变量
声明:
gl_CullDistance is a member of the gl_PerVertex named block: 
    out gl_PerVertex {
        vec4 gl_Position;
        float gl_PointSize;
        float gl_ClipDistance[];
        float gl_CullDistance[];
    };
In fragment shaders, it is intrinsically declared as: in float gl_CullDistance[] ;
支持版本:4.50 
描述:gl_CullDistance — provides a mechanism for controlling user culling
适用范围:顶点和几何着色器
}}
gl_FragCoord{{
类型:内建变量
声明:in vec4 gl_FragCoord ; 
支持版本:1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_FragCoord — contains the window-relative coordinates of the current fragment
适用范围:片元着色器
}}
gl_FragDepth{{
类型:内建变量
声明:out float gl_FragDepth ; 
支持版本:1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_FragDepth — establishes a depth value for the current fragment
适用范围:片元着色器
}}
gl_FrontFacing{{
类型:内建变量
声明:in bool gl_FrontFacing ; 
支持版本:1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_FrontFacing — indicates whether a primitive is front or back facing
适用范围:片元着色器
}}
gl_GlobalInvocationID{{
类型:内建变量
声明:in uvec3 gl_GlobalInvocationID ; 
支持版本:4.30 4.40 4.50 
描述:gl_GlobalInvocationID — contains the global index of work item currently being operated on by a compute shader
适用范围:计算着色器
}}
gl_HelperInvocation{{
类型:内建变量
声明:in bool gl_HelperInvocation ; 
支持版本:4.50 
描述:gl_HelperInvocation — indicates whether a fragment shader invocation is a helper invocation
适用范围:片元着色器
}}
gl_InstanceID{{
类型:内建变量
声明:in int gl_InstanceID ; 
支持版本:1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_InstanceID — contains the index of the current primitive in an instanced draw command
适用范围:顶点着色器
}}
gl_InvocationID{{
类型:内建变量
声明:in int gl_InvocationID ; 
支持版本:1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_InvocationID — contains the invocation index of the current shader
适用范围:1.50-3.30仅几何着色器
}}
gl_Layer{{
类型:内建变量
声明:
// Geometry stage
out int gl_Layer ; 
// Fragment stage
in int gl_Layer ; 
支持版本:1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_Layer — contains the selected layer of a multi-layer framebuffer attachment
适用范围:1.50-4.20仅几何着色器,4.30-4.50几何和片元着色器
}}
gl_LocalInvocationID{{
类型:内建变量
声明:in uvec3 gl_LocalInvocationID ; 
支持版本:4.30 4.40 4.50 
描述:gl_LocalInvocationID — contains the index of work item currently being operated on by a compute shader
适用范围:计算着色器
}}
gl_LocalInvocationIndex{{
类型:内建变量
声明:in uint gl_LocalInvocationIndex ; 
支持版本:4.30 4.40 4.50 
描述:gl_LocalInvocationIndex — contains the local linear index of work item currently being operated on by a compute shader
适用范围:计算着色器
}}
gl_NumSamples{{
类型:内建变量
声明:in bool gl_NumSamples ; 
支持版本:4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_NumSamples — contains the total number of samples in the framebuffer
适用范围:片元着色器
}}
gl_NumWorkGroups{{
类型:内建变量
声明:in uvec3 gl_NumWorkGroups ; 
支持版本:4.30 4.40 4.50
描述:gl_NumWorkGroups — contains the number of workgroups that have been dispatched to a compute shader
适用范围:计算着色器
}}
gl_PatchVerticesIn{{
类型:内建变量
声明:in int gl_PatchVerticesIn ;  
支持版本:4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_PatchVerticesIn — contains the number of vertices in the current patch
适用范围:细分着色器
}}
gl_PointCoord{{
类型:内建变量
声明:in vec2 gl_PointCoord ;
支持版本:1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_PointCoord — contains the coordinate of a fragment within a point
适用范围:片元着色器
}}
gl_PointSize{{
类型:内建变量
声明:
gl_PointSize is a member of the gl_PerVertex named block: 
    out gl_PerVertex {
        vec4 gl_Position;
        float gl_PointSize;
        float gl_ClipDistance[];
    };
支持版本:1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_PointSize — contains size of rasterized points, in pixels
适用范围:1.10-1.40仅顶点着色器,1.50-3.30仅顶点和几何着色器,4.00-4.50顶点、几何和细分着色器
}}
gl_Position{{
类型:内建变量
声明:
gl_Position is a member of the gl_PerVertex named block: 
    out gl_PerVertex {
        vec4 gl_Position;
        float gl_PointSize;
        float gl_ClipDistance[];
    };
支持版本:1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_Position — contains the position of the current vertex
适用范围:顶点着色器
}}
gl_PrimitiveID{{
类型:内建变量
声明:
 In tessellation control, tessellation evaluation, and
// fragment shaders
in int gl_PrimitiveID ; 
// In geometry shaders
out int gl_PrimitiveID ; 
支持版本:1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_PrimitiveID — contains the index of the current primitive
适用范围:1.50-3.30几何和片元着色器,4.00-4.50几何、片元和细分着色器
}}
gl_PrimitiveIDIn{{
类型:内建变量
声明:in int gl_PrimitiveIDIn ; 
支持版本:1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_PrimitiveIDIn — contains the index of the current primitive
适用范围:几何着色器
}}
gl_SampleID{{
类型:内建变量
声明:in int gl_SampleID ; 
支持版本:4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_SampleID — contains the index of the sample currently being processed
适用范围:片元着色器
}}
gl_SampleMask{{
类型:内建变量
声明:out int gl_SampleMask[] ; 
支持版本:4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_SampleMask — specifies the sample coverage mask for the current fragment
适用范围:片元着色器
}}
gl_SampleMaskIn{{
类型:内建变量
声明:in int gl_SampleMaskIn[] ; 
支持版本:4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_SampleMaskIn — contains the computed sample coverage mask for the current fragment
适用范围:片元着色器
}}
gl_SamplePosition{{
类型:内建变量
声明:in vec2 gl_SamplePosition ; 
支持版本:4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_SamplePosition — contains the location of the current sample within the current fragment
适用范围:片元着色器
}}
gl_TessCoord{{
类型:内建变量
声明:in vec3 gl_TessCoord ; 
支持版本:4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_TessCoord — contains the coordinate of the vertex within the current patch
适用范围:细分着色器
}}
gl_TessLevelInner{{
类型:内建变量
声明:
// In tessellation control shaders
out float gl_TessLevelInner[2] ; 
// In tessellation evaluation shaders
in float gl_TessLevelInner[2] ; 
支持版本:4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_TessLevelInner — contains the inner tessellation levels for the current patch
适用范围:细分着色器
}}
gl_TessLevelOuter{{
类型:内建变量
声明:
// In tessellation control shaders
out float gl_TessLevelOuter[4] ;
// In tessellation evaluation shaders
in float gl_TessLevelOuter[4] ; 
支持版本:4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_TessLevelOuter — contains the outer tessellation levels for the current patch
适用范围:细分着色器
}}
gl_VertexID{{
类型:内建变量
声明:in int gl_VertexID ; 
支持版本:1.10 1.20 1.30 1.40 1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_VertexID — contains the index of the current vertex
适用范围:顶点着色器
}}
gl_ViewportIndex{{
类型:内建变量
声明:
// In geometry shaders
out int gl_ViewportIndex ; 
// In fragment shaders
in int gl_ViewportIndex ; 
支持版本:1.50 3.30 4.00 4.10 4.20 4.30 4.40 4.50 
描述:gl_ViewportIndex — contains the index of the viewport to be used in viewport transformation and scissoring
适用范围:1.50-4.20仅几何着色器,4.30-4.50仅片元和几何着色器
}}
gl_WorkGroupID{{
类型:内建变量
声明:in uvec3 gl_WorkGroupID ; 
支持版本:4.30 4.40 4.50 
描述:gl_WorkGroupID — contains the index of the workgroup currently being operated on by a compute shader
适用范围:计算着色器
}}
gl_WorkGroupSize{{
类型:内建变量
声明:const uvec3 gl_WorkGroupSize ; 
支持版本:4.30 4.40 4.50 
描述:gl_WorkGroupSize — contains the size of the workgroup operated on by a compute shader
适用范围:计算着色器
}}
gl_DepthRange{{
类型:内建变量
声明:
struct gl_DepthRangeParameters{
    float near;
    float far;
    float diff;
};
uniform gl_DepthRangeParameters gl_DepthRange;
支持版本:3.30 - 4.40 4.50 
描述:这个struct提供了对glDepthRange近、远值的访问。diff等于far和near的差。
适用范围:片元着色器
}}
gl_in{{
类型:内建变量
声明:
in gl_PerVertex{
	vec4 gl_Position;
	float gl_PointSize;
	float gl_ClipDistance[];
} gl_in[];
gl_PerVertex包含了从前面的顶点着色器传送过来的值。
支持版本:3.30 - 4.40 4.50 
描述:在几何着色器中，他们有前缀gl_in，是一个block的数组。这个数组的大小依赖于用于这个几何着色器的输入的layout关键词。用户不用以一个特定的大小重新声明这个block，系统会自动完成。可以用函数length()获得其大小。
适用范围:几何着色器
}}
gl_FragColor{{
类型:内建变量
声明:mediump vec4 gl_FragColor;
支持版本:3.30+,OpenGL ES
描述:片元着色器可以使用gl_FragColor和gl_FragData内建变量向OpenGL管线输出值，除非关键字discard被执行。
适用范围:片元着色器
}}
gl_FragData{{
类型:内建变量
描述:
gl_FragData变量值是一个数组。向gl_FragData[n]写入数据时为了指明后续固定功能管线要使用的片元数据n。如果后续固定功能管线要使用这个片元数据，但是着色器又没有给它写入值，那么片元数据将是一个未定义的值。
如果着色器静态地给gl_FragColor赋值，那么它就不会给gl_FragData的任何元素赋值。如果着色器静态地给gl_FragData的任何元素赋值，那么它就不会给gl_FragColor赋值。也就是说，着色器不会同时给gl_FragColor和gl_FragData变量都赋值。
适用范围:片元着色器
}}
gl_MaxCombinedTextureImageUnits{{
类型:内建变量
声明:const mediump int gl_MaxCombinedTextureImageUnits >= 8
支持版本:OpenGL ES
描述:gl_MaxVaryingVectors 表示在 vertex Shader和fragment Shader总共最多支持多少个纹理单元. 这个值的大小取决于 OpenGL ES 在某设备上的具体实现, 不过最低不能小于 8 个.
适用范围:顶点着色器和片元着色器
}}
gl_MaxDrawBuffers{{
类型:内建变量
声明:const mediump int gl_MaxDrawBuffers = 1
支持版本:OpenGL ES
描述:gl_MaxDrawBuffers 表示可用的drawBuffers数,在OpenGL ES 2.0中这个值为1, 在将来的版本可能会有所变化.
适用范围:顶点着色器和片元着色器
}}
gl_MaxFragmentUniformVectors{{
类型:内建变量
声明:const mediump int gl_MaxFragmentUniformVectors >= 16
支持版本:OpenGL ES
描述:gl_MaxFragmentUniformVectors 表示在 fragment Shader(片元着色器)中可用的最大uniform vectors数,这个值的大小取决于 OpenGL ES 在某设备上的具体实现, 不过最低不能小于 16 个.
适用范围:片元着色器
}}
gl_MaxTextureImageUnits{{
类型:内建变量
声明:const mediump int gl_MaxTextureImageUnits >= 8
支持版本:OpenGL ES
描述:gl_MaxTextureImageUnits 表示在 fragment Shader(片元着色器)中能访问的最大纹理单元数,这个值的大小取决于 OpenGL ES 在某设备上的具体实现, 不过最低不能小于 8 个.
适用范围:片元着色器
}}
gl_MaxVaryingVectors{{
类型:内建变量
声明:const mediump int gl_MaxVaryingVectors >= 8
支持版本:OpenGL ES
描述:gl_MaxVaryingVectors 表示在vertex shader(顶点着色器)中可用的最大varying vectors数. 这个值的大小取决于 OpenGL ES 在某设备上的具体实现, 不过最低不能小于 8 个.
适用范围:顶点着色器
}}
gl_MaxVertexAttribs{{
类型:内建变量
声明:const mediump int gl_MaxVertexAttribs>=8
支持版本:OpenGL ES
描述:gl_MaxVertexAttribs 表示在vertex shader(顶点着色器)中可用的最大attributes数.这个值的大小取决于 OpenGL ES 在某设备上的具体实现, 不过最低不能小于 8 个.
适用范围:顶点着色器
}}
gl_MaxVertexTextureImageUnits{{
类型:内建变量
声明:const mediump int gl_MaxVertexTextureImageUnits >= 0
支持版本:OpenGL ES
描述:gl_MaxVertexTextureImageUnits 表示在vertex shader(顶点着色器)中可用的最大纹理单元数(贴图). 这个值的大小取决于 OpenGL ES 在某设备上的具体实现, 甚至可以一个都没有(无法获取顶点纹理)
适用范围:顶点着色器
}}
gl_MaxVertexUniformVectors{{
类型:内建变量
声明:const mediump int gl_MaxVertexUniformVectors >= 128
支持版本:OpenGL ES
描述:gl_MaxVertexUniformVectors 表示在vertex shader(顶点着色器)中可用的最大uniform vectors数. 这个值的大小取决于 OpenGL ES 在某设备上的具体实现, 不过最低不能小于 128 个.
适用范围:顶点着色器
}}
gl_ClipVertex{{
类型:内建变量
声明:vec4 gl_ClipVertex; 
支持版本:未查及
描述:如果启用了Clip Plane功能，gl_ClipVertex可以放入用来与Clip Plane平面做测试用的位置
适用范围:顶点着色器
}}